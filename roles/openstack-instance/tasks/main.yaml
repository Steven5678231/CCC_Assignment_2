---
# Create an instance on NeCTAR
- name: Create an instance
  os_server:
    name: '{{ item.name }}'
    image: '{{ instance_image }}'
    key_name: '{{ instance_key_name }}'
    flavor: '{{ item.flavor }}'
    availability_zone: '{{ availability_zone }}'
    security_groups: '{{ sg_names }}'
    volumes: '{{ item.volumes }}'
    network: '{{ instance_network }}'
    auto_floating_ip: yes
    wait: yes
    timeout: 600
    state: present
  loop: '{{ instances }}'
  register: os_instance

- debug:
    msg: "Instance {{ item.openstack.name }} has been created. IP address is {{ item.openstack.public_v4 }}"
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: add all servers to known_hosts
  shell: ssh-keyscan -H {{item.openstack.public_v4}} >> ~/.ssh/known_hosts
  with_items: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: couchdb ipv4 addresses
  set_fact:
    couchdbAddrs: "{{ couchdbAddrs | default([]) + [item.openstack.public_v4]}}"
  with_items: "{{os_instance.results[0:3]}}"
  when: item.openstack is defined
  
- debug:
    msg: "CouchDB address(es) {{ couchdbAddrs }} have been created."

- name: demo ipv4 addresses
  set_fact:
    demoAddrs: "{{ demoAddrs | default([]) + [item.openstack.public_v4]}}"
  with_items: "{{os_instance.results[3:4]}}"
  when: item.openstack is defined
  
- debug:
    msg: "Demo address(es) {{ demoAddrs }} have been created."

- name: chmod 600 ccckey.pem
  file:
    path: "{{pem}}"
    mode: 0600

- name: Copy ssh private key to demo_server
  shell: "scp -i {{pem}} {{SSHPrivateKey}} ubuntu@{{item}}:~"
  loop: '{{demoAddrs}}'
